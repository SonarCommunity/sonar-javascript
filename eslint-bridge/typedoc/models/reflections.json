{
	"id": 0,
	"name": "SonarJS linter helper functions",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"children": [
		{
			"id": 230,
			"name": "Chai",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 234,
					"name": "isAssertion",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/chai.ts",
							"line": 40,
							"character": 18,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/chai.ts#L40"
						}
					],
					"signatures": [
						{
							"id": 235,
							"name": "isAssertion",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 236,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Node",
										"qualifiedName": "Node",
										"package": "@types/estree"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 231,
					"name": "isImported",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/chai.ts",
							"line": 32,
							"character": 18,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/chai.ts#L32"
						}
					],
					"signatures": [
						{
							"id": 232,
							"name": "isImported",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 233,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "RuleContext",
										"qualifiedName": "Rule.RuleContext",
										"package": "@types/eslint"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						234,
						231
					]
				}
			],
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/chai.ts",
					"line": 31,
					"character": 17,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/chai.ts#L31"
				}
			]
		},
		{
			"id": 253,
			"name": "Express",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This modules provides utilities for writing rules about Express.js."
					}
				]
			},
			"children": [
				{
					"id": 276,
					"name": "SensitiveMiddlewarePropertyRule",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/express.ts",
							"line": 132,
							"character": 18,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/express.ts#L132"
						}
					],
					"signatures": [
						{
							"id": 277,
							"name": "SensitiveMiddlewarePropertyRule",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rule factory for detecting sensitive settings that are passed to\nmiddlewares eventually used by Express.js applications:\n\napp.use(\n  middleware(settings)\n)\n\nor\n\napp.use(\n  middleware.method(settings)\n)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a rule module that raises issues when a sensitive property is found"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 278,
									"name": "sensitivePropertyFinder",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "a function looking for a sensitive setting on a middleware call"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 279,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/linting/eslint/rules/helpers/express.ts",
													"line": 133,
													"character": 29,
													"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/express.ts#L133"
												}
											],
											"signatures": [
												{
													"id": 280,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 281,
															"name": "context",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "RuleContext",
																"qualifiedName": "Rule.RuleContext",
																"package": "@types/eslint"
															}
														},
														{
															"id": 282,
															"name": "middlewareCall",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "CallExpression",
																"qualifiedName": "CallExpression",
																"package": "@types/estree"
															}
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Property",
															"qualifiedName": "Property",
															"package": "@types/estree"
														}
													}
												}
											]
										}
									}
								},
								{
									"id": 283,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the reported message when an issue is raised"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rule.RuleModule",
								"qualifiedName": "Rule.RuleModule",
								"package": "@types/eslint"
							}
						}
					]
				},
				{
					"id": 258,
					"name": "attemptFindAppInjection",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/express.ts",
							"line": 59,
							"character": 18,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/express.ts#L59"
						}
					],
					"signatures": [
						{
							"id": 259,
							"name": "attemptFindAppInjection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Checks whether the function injects an instantiated app and is exported like "
									},
									{
										"kind": "code",
										"text": "`module.exports = function(app) {}`"
									},
									{
										"kind": "text",
										"text": "\nor "
									},
									{
										"kind": "code",
										"text": "`module.exports.property = function(app) {}`"
									},
									{
										"kind": "text",
										"text": ", and returns app if it matches."
									}
								]
							},
							"parameters": [
								{
									"id": 260,
									"name": "functionDef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Function",
										"qualifiedName": "Function",
										"package": "@types/estree"
									}
								},
								{
									"id": 261,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "RuleContext",
										"qualifiedName": "Rule.RuleContext",
										"package": "@types/eslint"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "estree.Identifier",
										"qualifiedName": "Identifier",
										"package": "@types/estree"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					]
				},
				{
					"id": 254,
					"name": "attemptFindAppInstantiation",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/express.ts",
							"line": 43,
							"character": 18,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/express.ts#L43"
						}
					],
					"signatures": [
						{
							"id": 255,
							"name": "attemptFindAppInstantiation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Checks whether the declaration looks somewhat like "
									},
									{
										"kind": "code",
										"text": "`<id> = express()`"
									},
									{
										"kind": "text",
										"text": "\nand returns "
									},
									{
										"kind": "code",
										"text": "`<id>`"
									},
									{
										"kind": "text",
										"text": " if it matches."
									}
								]
							},
							"parameters": [
								{
									"id": 256,
									"name": "varDecl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "VariableDeclarator",
										"qualifiedName": "VariableDeclarator",
										"package": "@types/estree"
									}
								},
								{
									"id": 257,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "RuleContext",
										"qualifiedName": "Rule.RuleContext",
										"package": "@types/eslint"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "estree.Identifier",
										"qualifiedName": "Identifier",
										"package": "@types/estree"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					]
				},
				{
					"id": 271,
					"name": "isMiddlewareInstance",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/express.ts",
							"line": 102,
							"character": 18,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/express.ts#L102"
						}
					],
					"signatures": [
						{
							"id": 272,
							"name": "isMiddlewareInstance",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Checks whether a node looks somewhat like "
									},
									{
										"kind": "code",
										"text": "`require('m')()`"
									},
									{
										"kind": "text",
										"text": " for\nsome middleware "
									},
									{
										"kind": "code",
										"text": "`m`"
									},
									{
										"kind": "text",
										"text": " from the list of middlewares."
									}
								]
							},
							"parameters": [
								{
									"id": 273,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "RuleContext",
										"qualifiedName": "Rule.RuleContext",
										"package": "@types/eslint"
									}
								},
								{
									"id": 274,
									"name": "middlewares",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 275,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Node",
										"qualifiedName": "Node",
										"package": "@types/estree"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 262,
					"name": "isUsingMiddleware",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/express.ts",
							"line": 85,
							"character": 18,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/express.ts#L85"
						}
					],
					"signatures": [
						{
							"id": 263,
							"name": "isUsingMiddleware",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Checks whether the expression looks somewhat like "
									},
									{
										"kind": "code",
										"text": "`app.use(m1, [m2, m3], ..., mN)`"
									},
									{
										"kind": "text",
										"text": ",\nwhere one of "
									},
									{
										"kind": "code",
										"text": "`mK`"
									},
									{
										"kind": "text",
										"text": "-nodes satisfies the given predicate."
									}
								]
							},
							"parameters": [
								{
									"id": 264,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "RuleContext",
										"qualifiedName": "Rule.RuleContext",
										"package": "@types/eslint"
									}
								},
								{
									"id": 265,
									"name": "callExpression",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CallExpression",
										"qualifiedName": "CallExpression",
										"package": "@types/estree"
									}
								},
								{
									"id": 266,
									"name": "app",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Identifier",
										"qualifiedName": "Identifier",
										"package": "@types/estree"
									}
								},
								{
									"id": 267,
									"name": "middlewareNodePredicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 268,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/linting/eslint/rules/helpers/express.ts",
													"line": 89,
													"character": 29,
													"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/express.ts#L89"
												}
											],
											"signatures": [
												{
													"id": 269,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 270,
															"name": "n",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Node",
																"qualifiedName": "Node",
																"package": "@types/estree"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						276,
						258,
						254,
						271,
						262
					]
				}
			],
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/express.ts",
					"line": 36,
					"character": 17,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/express.ts#L36"
				}
			]
		},
		{
			"id": 366,
			"name": "Mocha",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 377,
					"name": "TestCase",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 379,
							"name": "callback",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/mocha.ts",
									"line": 37,
									"character": 4,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/mocha.ts#L37"
								}
							],
							"type": {
								"type": "reference",
								"name": "Function",
								"qualifiedName": "Function",
								"package": "@types/estree"
							}
						},
						{
							"id": 378,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/mocha.ts",
									"line": 36,
									"character": 4,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/mocha.ts#L36"
								}
							],
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								379,
								378
							]
						}
					],
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/mocha.ts",
							"line": 35,
							"character": 19,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/mocha.ts#L35"
						}
					]
				},
				{
					"id": 371,
					"name": "extractTestCase",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/mocha.ts",
							"line": 55,
							"character": 18,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/mocha.ts#L55"
						}
					],
					"signatures": [
						{
							"id": 372,
							"name": "extractTestCase",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 373,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Node",
										"qualifiedName": "Node",
										"package": "@types/estree"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 377,
										"name": "TestCase"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				},
				{
					"id": 374,
					"name": "isTestCase",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/mocha.ts",
							"line": 66,
							"character": 18,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/mocha.ts#L66"
						}
					],
					"signatures": [
						{
							"id": 375,
							"name": "isTestCase",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 376,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Node",
										"qualifiedName": "Node",
										"package": "@types/estree"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 367,
					"name": "isTestConstruct",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/mocha.ts",
							"line": 40,
							"character": 18,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/mocha.ts#L40"
						}
					],
					"signatures": [
						{
							"id": 368,
							"name": "isTestConstruct",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 369,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Node",
										"qualifiedName": "Node",
										"package": "@types/estree"
									}
								},
								{
									"id": 370,
									"name": "constructs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"defaultValue": "TEST_CONSTRUCTS"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						377
					]
				},
				{
					"title": "Functions",
					"children": [
						371,
						374,
						367
					]
				}
			],
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/mocha.ts",
					"line": 23,
					"character": 17,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/mocha.ts#L23"
				}
			]
		},
		{
			"id": 350,
			"name": "LiveVariables",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 351,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/lva.ts",
							"line": 57,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts#L57"
						}
					],
					"signatures": [
						{
							"id": 352,
							"name": "new LiveVariables",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 353,
									"name": "segment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CodePathSegment",
										"qualifiedName": "Rule.CodePathSegment",
										"package": "@types/eslint"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 350,
								"name": "LiveVariables"
							}
						}
					]
				},
				{
					"id": 355,
					"name": "gen",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "variables that are being read in the block"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/lva.ts",
							"line": 66,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts#L66"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "Variable",
								"qualifiedName": "Scope.Variable",
								"package": "@types/eslint"
							}
						],
						"name": "Set",
						"qualifiedName": "Set",
						"package": "typescript"
					},
					"defaultValue": "..."
				},
				{
					"id": 357,
					"name": "in",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "variables needed by this or a successor block and are not killed in this block"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/lva.ts",
							"line": 74,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts#L74"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "Variable",
								"qualifiedName": "Scope.Variable",
								"package": "@types/eslint"
							}
						],
						"name": "Set",
						"qualifiedName": "Set",
						"package": "typescript"
					},
					"defaultValue": "..."
				},
				{
					"id": 356,
					"name": "kill",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "variables that are being written in the block"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/lva.ts",
							"line": 70,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts#L70"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "Variable",
								"qualifiedName": "Scope.Variable",
								"package": "@types/eslint"
							}
						],
						"name": "Set",
						"qualifiedName": "Set",
						"package": "typescript"
					},
					"defaultValue": "..."
				},
				{
					"id": 358,
					"name": "out",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "variables needed by successors"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/lva.ts",
							"line": 78,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts#L78"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Variable",
							"qualifiedName": "Scope.Variable",
							"package": "@types/eslint"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 359,
					"name": "references",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "collects references in order they are evaluated, set in JS maintains insertion order"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/lva.ts",
							"line": 83,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts#L83"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 334,
								"name": "ReferenceLike"
							}
						],
						"name": "Set",
						"qualifiedName": "Set",
						"package": "typescript"
					},
					"defaultValue": "..."
				},
				{
					"id": 354,
					"name": "segment",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/lva.ts",
							"line": 61,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts#L61"
						}
					],
					"type": {
						"type": "reference",
						"name": "CodePathSegment",
						"qualifiedName": "Rule.CodePathSegment",
						"package": "@types/eslint"
					}
				},
				{
					"id": 360,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/lva.ts",
							"line": 85,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts#L85"
						}
					],
					"signatures": [
						{
							"id": 361,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 362,
									"name": "ref",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 334,
										"name": "ReferenceLike"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 363,
					"name": "propagate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/lva.ts",
							"line": 98,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts#L98"
						}
					],
					"signatures": [
						{
							"id": 364,
							"name": "propagate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 365,
									"name": "liveVariablesMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 350,
												"name": "LiveVariables"
											}
										],
										"name": "Map",
										"qualifiedName": "Map",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						351
					]
				},
				{
					"title": "Properties",
					"children": [
						355,
						357,
						356,
						358,
						359,
						354
					]
				},
				{
					"title": "Methods",
					"children": [
						360,
						363
					]
				}
			],
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/lva.ts",
					"line": 56,
					"character": 13,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts#L56"
				}
			]
		},
		{
			"id": 426,
			"name": "ReachingDefinitions",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 427,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/reaching-definitions.ts",
							"line": 56,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/reaching-definitions.ts#L56"
						}
					],
					"signatures": [
						{
							"id": 428,
							"name": "new ReachingDefinitions",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 429,
									"name": "segment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CodePathSegment",
										"qualifiedName": "Rule.CodePathSegment",
										"package": "@types/eslint"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 426,
								"name": "ReachingDefinitions"
							}
						}
					]
				},
				{
					"id": 431,
					"name": "in",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/reaching-definitions.ts",
							"line": 62,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/reaching-definitions.ts#L62"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "Variable",
								"qualifiedName": "Scope.Variable",
								"package": "@types/eslint"
							},
							{
								"type": "reference",
								"id": 425,
								"name": "Values"
							}
						],
						"name": "Map",
						"qualifiedName": "Map",
						"package": "typescript"
					},
					"defaultValue": "..."
				},
				{
					"id": 432,
					"name": "out",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/reaching-definitions.ts",
							"line": 64,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/reaching-definitions.ts#L64"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "Variable",
								"qualifiedName": "Scope.Variable",
								"package": "@types/eslint"
							},
							{
								"type": "reference",
								"id": 425,
								"name": "Values"
							}
						],
						"name": "Map",
						"qualifiedName": "Map",
						"package": "typescript"
					},
					"defaultValue": "..."
				},
				{
					"id": 433,
					"name": "references",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "collects references in order they are evaluated, set in JS maintains insertion order"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/reaching-definitions.ts",
							"line": 69,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/reaching-definitions.ts#L69"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "Reference",
								"qualifiedName": "Scope.Reference",
								"package": "@types/eslint"
							}
						],
						"name": "Set",
						"qualifiedName": "Set",
						"package": "typescript"
					},
					"defaultValue": "..."
				},
				{
					"id": 430,
					"name": "segment",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/reaching-definitions.ts",
							"line": 60,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/reaching-definitions.ts#L60"
						}
					],
					"type": {
						"type": "reference",
						"name": "CodePathSegment",
						"qualifiedName": "Rule.CodePathSegment",
						"package": "@types/eslint"
					}
				},
				{
					"id": 434,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/reaching-definitions.ts",
							"line": 71,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/reaching-definitions.ts#L71"
						}
					],
					"signatures": [
						{
							"id": 435,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 436,
									"name": "ref",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Reference",
										"qualifiedName": "Scope.Reference",
										"package": "@types/eslint"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 444,
					"name": "join",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/reaching-definitions.ts",
							"line": 106,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/reaching-definitions.ts#L106"
						}
					],
					"signatures": [
						{
							"id": 445,
							"name": "join",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 446,
									"name": "previousOut",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Variable",
												"qualifiedName": "Scope.Variable",
												"package": "@types/eslint"
											},
											{
												"type": "reference",
												"id": 425,
												"name": "Values"
											}
										],
										"name": "Map",
										"qualifiedName": "Map",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 437,
					"name": "propagate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/reaching-definitions.ts",
							"line": 78,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/reaching-definitions.ts#L78"
						}
					],
					"signatures": [
						{
							"id": 438,
							"name": "propagate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 439,
									"name": "reachingDefinitionsMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 426,
												"name": "ReachingDefinitions"
											}
										],
										"name": "Map",
										"qualifiedName": "Map",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 440,
					"name": "updateProgramState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/reaching-definitions.ts",
							"line": 93,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/reaching-definitions.ts#L93"
						}
					],
					"signatures": [
						{
							"id": 441,
							"name": "updateProgramState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 442,
									"name": "ref",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Reference",
										"qualifiedName": "Scope.Reference",
										"package": "@types/eslint"
									}
								},
								{
									"id": 443,
									"name": "programState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Variable",
												"qualifiedName": "Scope.Variable",
												"package": "@types/eslint"
											},
											{
												"type": "reference",
												"id": 425,
												"name": "Values"
											}
										],
										"name": "Map",
										"qualifiedName": "Map",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						427
					]
				},
				{
					"title": "Properties",
					"children": [
						431,
						432,
						433,
						430
					]
				},
				{
					"title": "Methods",
					"children": [
						434,
						444,
						437,
						440
					]
				}
			],
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/reaching-definitions.ts",
					"line": 55,
					"character": 13,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/reaching-definitions.ts#L55"
				}
			]
		},
		{
			"id": 334,
			"name": "ReferenceLike",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 336,
					"name": "from",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/lva.ts",
							"line": 40,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts#L40"
						}
					],
					"type": {
						"type": "reference",
						"name": "Scope",
						"qualifiedName": "Scope.Scope",
						"package": "@types/eslint"
					}
				},
				{
					"id": 335,
					"name": "identifier",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/lva.ts",
							"line": 39,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts#L39"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "JSXIdentifier",
								"qualifiedName": "JSXIdentifier",
								"package": "@typescript-eslint/types"
							},
							{
								"type": "reference",
								"name": "Identifier",
								"qualifiedName": "Identifier",
								"package": "@types/estree"
							}
						]
					}
				},
				{
					"id": 339,
					"name": "init",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/lva.ts",
							"line": 43,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts#L43"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 337,
					"name": "resolved",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/lva.ts",
							"line": 41,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts#L41"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "Variable",
								"qualifiedName": "Scope.Variable",
								"package": "@types/eslint"
							}
						]
					}
				},
				{
					"id": 338,
					"name": "writeExpr",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/lva.ts",
							"line": 42,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts#L42"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						]
					}
				},
				{
					"id": 342,
					"name": "isRead",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/lva.ts",
							"line": 47,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts#L47"
						}
					],
					"signatures": [
						{
							"id": 343,
							"name": "isRead",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 346,
					"name": "isReadOnly",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/lva.ts",
							"line": 51,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts#L51"
						}
					],
					"signatures": [
						{
							"id": 347,
							"name": "isReadOnly",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 348,
					"name": "isReadWrite",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/lva.ts",
							"line": 53,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts#L53"
						}
					],
					"signatures": [
						{
							"id": 349,
							"name": "isReadWrite",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 340,
					"name": "isWrite",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/lva.ts",
							"line": 45,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts#L45"
						}
					],
					"signatures": [
						{
							"id": 341,
							"name": "isWrite",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 344,
					"name": "isWriteOnly",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/lva.ts",
							"line": 49,
							"character": 2,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts#L49"
						}
					],
					"signatures": [
						{
							"id": 345,
							"name": "isWriteOnly",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						336,
						335,
						339,
						337,
						338
					]
				},
				{
					"title": "Methods",
					"children": [
						342,
						346,
						348,
						340,
						344
					]
				}
			],
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/lva.ts",
					"line": 38,
					"character": 17,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts#L38"
				}
			]
		},
		{
			"id": 224,
			"name": "FunctionNodeType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 34,
					"character": 12,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L34"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"name": "estree.FunctionDeclaration",
						"qualifiedName": "FunctionDeclaration",
						"package": "@types/estree"
					},
					{
						"type": "reference",
						"name": "estree.FunctionExpression",
						"qualifiedName": "FunctionExpression",
						"package": "@types/estree"
					},
					{
						"type": "reference",
						"name": "estree.ArrowFunctionExpression",
						"qualifiedName": "ArrowFunctionExpression",
						"package": "@types/estree"
					}
				]
			}
		},
		{
			"id": 328,
			"name": "LocationHolder",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/location.ts",
					"line": 25,
					"character": 12,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/location.ts#L25"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"name": "AST.Token",
						"qualifiedName": "AST.Token",
						"package": "@types/eslint"
					},
					{
						"type": "reference",
						"name": "TSESTree.Node",
						"qualifiedName": "Node",
						"package": "@typescript-eslint/types"
					},
					{
						"type": "reference",
						"name": "estree.Node",
						"qualifiedName": "Node",
						"package": "@types/estree"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 329,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 330,
									"name": "loc",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/linting/eslint/rules/helpers/location.ts",
											"line": 25,
											"character": 73,
											"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/location.ts#L25"
										}
									],
									"type": {
										"type": "reference",
										"name": "AST.SourceLocation",
										"qualifiedName": "AST.SourceLocation",
										"package": "@types/eslint"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										330
									]
								}
							],
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/location.ts",
									"line": 25,
									"character": 71,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/location.ts#L25"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 223,
			"name": "LoopLike",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 27,
					"character": 12,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L27"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"name": "estree.WhileStatement",
						"qualifiedName": "WhileStatement",
						"package": "@types/estree"
					},
					{
						"type": "reference",
						"name": "estree.DoWhileStatement",
						"qualifiedName": "DoWhileStatement",
						"package": "@types/estree"
					},
					{
						"type": "reference",
						"name": "estree.ForStatement",
						"qualifiedName": "ForStatement",
						"package": "@types/estree"
					},
					{
						"type": "reference",
						"name": "estree.ForOfStatement",
						"qualifiedName": "ForOfStatement",
						"package": "@types/estree"
					},
					{
						"type": "reference",
						"name": "estree.ForInStatement",
						"qualifiedName": "ForInStatement",
						"package": "@types/estree"
					}
				]
			}
		},
		{
			"id": 222,
			"name": "Node",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 25,
					"character": 12,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L25"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"name": "estree.Node",
						"qualifiedName": "Node",
						"package": "@types/estree"
					},
					{
						"type": "reference",
						"name": "TSESTree.Node",
						"qualifiedName": "Node",
						"package": "@typescript-eslint/types"
					}
				]
			}
		},
		{
			"id": 504,
			"name": "RequiredParserServices",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExternal": true
			},
			"sources": [
				{
					"fileName": "node_modules/eslint-plugin-sonarjs/lib/utils/parser-services.d.ts",
					"line": 2,
					"character": 20
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "k",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"name": "ParserServices",
						"qualifiedName": "ParserServices",
						"package": "@typescript-eslint/typescript-estree"
					}
				},
				"templateType": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"name": "k",
								"qualifiedName": "k",
								"package": "eslint-plugin-sonarjs"
							},
							"objectType": {
								"type": "reference",
								"name": "ParserServices",
								"qualifiedName": "ParserServices",
								"package": "@typescript-eslint/typescript-estree"
							}
						},
						{
							"type": "intrinsic",
							"name": "undefined"
						}
					],
					"name": "Exclude",
					"qualifiedName": "Exclude",
					"package": "typescript"
				}
			}
		},
		{
			"id": 500,
			"name": "RuleContext",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/type.ts",
					"line": 25,
					"character": 12,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/type.ts#L25"
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"name": "TSESLint.RuleContext",
				"qualifiedName": "RuleContext",
				"package": "@typescript-eslint/utils"
			}
		},
		{
			"id": 225,
			"name": "StringLiteral",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 39,
					"character": 12,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L39"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"name": "estree.Literal",
						"qualifiedName": "Literal",
						"package": "@types/estree"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 226,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 227,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/linting/eslint/rules/helpers/ast.ts",
											"line": 39,
											"character": 47,
											"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L39"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										227
									]
								}
							],
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/ast.ts",
									"line": 39,
									"character": 45,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L39"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 425,
			"name": "Values",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/reaching-definitions.ts",
					"line": 40,
					"character": 12,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/reaching-definitions.ts#L40"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"name": "AssignedValues"
					},
					{
						"type": "reference",
						"name": "UnknownValue"
					}
				]
			}
		},
		{
			"id": 228,
			"name": "FUNCTION_NODES",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 41,
					"character": 13,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L41"
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 250,
			"name": "collectionConstructor",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/collection.ts",
					"line": 20,
					"character": 13,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/collection.ts#L20"
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 229,
			"name": "functionLike",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 47,
					"character": 13,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L47"
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "Set",
				"qualifiedName": "Set",
				"package": "typescript"
			},
			"defaultValue": "..."
		},
		{
			"id": 290,
			"name": "globalsByLibraries",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/globals.ts",
					"line": 22,
					"character": 13,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L22"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 291,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 297,
							"name": "amd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 791,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L791"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 313,
							"name": "applescript",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 1097,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L1097"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 315,
							"name": "atomtest",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 1131,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L1131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 293,
							"name": "browser",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 85,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L85"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 292,
							"name": "builtin",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L23"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 296,
							"name": "commonjs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 790,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L790"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 303,
							"name": "couch",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 879,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L879"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 316,
							"name": "embertest",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 1142,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L1142"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 321,
							"name": "flow",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 1175,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L1175"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 320,
							"name": "greasemonkey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 1159,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L1159"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 299,
							"name": "jasmine",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 818,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L818"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 300,
							"name": "jest",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 838,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L838"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 307,
							"name": "jquery",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 948,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L948"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 311,
							"name": "meteor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 1020,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L1020"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 298,
							"name": "mocha",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 794,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L794"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 312,
							"name": "mongo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 1064,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L1064"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 305,
							"name": "nashorn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 915,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L915"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 295,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 773,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L773"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 302,
							"name": "phantomjs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 878,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L878"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 310,
							"name": "prototypejs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 980,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L980"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 317,
							"name": "protractor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 1156,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L1156"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 301,
							"name": "qunit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 857,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L857"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 304,
							"name": "rhino",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 892,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L892"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 314,
							"name": "serviceworker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 1110,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L1110"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 318,
							"name": "shared-node-browser",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 1157,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L1157"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 309,
							"name": "shelljs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 950,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L950"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 319,
							"name": "webextensions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 1158,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L1158"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 294,
							"name": "worker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 702,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L702"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 306,
							"name": "wsh",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 935,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L935"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 308,
							"name": "yui",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/linting/eslint/rules/helpers/globals.ts",
									"line": 949,
									"character": 2,
									"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L949"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								297,
								313,
								315,
								293,
								292,
								296,
								303,
								316,
								321,
								320,
								299,
								300,
								307,
								311,
								298,
								312,
								305,
								295,
								302,
								310,
								317,
								301,
								304,
								314,
								318,
								309,
								319,
								294,
								306,
								308
							]
						}
					],
					"sources": [
						{
							"fileName": "src/linting/eslint/rules/helpers/globals.ts",
							"line": 22,
							"character": 34,
							"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/globals.ts#L22"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 447,
			"name": "rule",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/rule-detect-react.ts",
					"line": 34,
					"character": 13,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/rule-detect-react.ts#L34"
				}
			],
			"type": {
				"type": "reference",
				"name": "Rule.RuleModule",
				"qualifiedName": "Rule.RuleModule",
				"package": "@types/eslint"
			},
			"defaultValue": "..."
		},
		{
			"id": 252,
			"name": "sortLike",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/collection.ts",
					"line": 40,
					"character": 13,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/collection.ts#L40"
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 424,
			"name": "unknownValue",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/reaching-definitions.ts",
					"line": 36,
					"character": 13,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/reaching-definitions.ts#L36"
				}
			],
			"type": {
				"type": "reference",
				"name": "UnknownValue"
			},
			"defaultValue": "..."
		},
		{
			"id": 251,
			"name": "writingMethods",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/collection.ts",
					"line": 22,
					"character": 13,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/collection.ts#L22"
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18,
			"name": "ancestorsChain",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ancestor.ts",
					"line": 43,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ancestor.ts#L43"
				}
			],
			"signatures": [
				{
					"id": 19,
					"name": "ancestorsChain",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 20,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@typescript-eslint/types"
							}
						},
						{
							"id": 21,
							"name": "boundaryTypes",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Set",
								"qualifiedName": "Set",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Node",
							"qualifiedName": "Node",
							"package": "@typescript-eslint/types"
						}
					}
				}
			]
		},
		{
			"id": 175,
			"name": "checkSensitiveCall",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 515,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L515"
				}
			],
			"signatures": [
				{
					"id": 176,
					"name": "checkSensitiveCall",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 177,
							"name": "context",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "RuleContext",
								"qualifiedName": "Rule.RuleContext",
								"package": "@types/eslint"
							}
						},
						{
							"id": 178,
							"name": "callExpression",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "CallExpression",
								"qualifiedName": "CallExpression",
								"package": "@types/estree"
							}
						},
						{
							"id": 179,
							"name": "sensitiveArgumentIndex",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 180,
							"name": "sensitiveProperty",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 181,
							"name": "sensitivePropertyValue",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 182,
							"name": "message",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 8,
			"name": "findFirstMatchingAncestor",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ancestor.ts",
					"line": 32,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ancestor.ts#L32"
				}
			],
			"signatures": [
				{
					"id": 9,
					"name": "findFirstMatchingAncestor",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 10,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@typescript-eslint/types"
							}
						},
						{
							"id": 11,
							"name": "predicate",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 12,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "src/linting/eslint/rules/helpers/ancestor.ts",
											"line": 34,
											"character": 13,
											"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ancestor.ts#L34"
										}
									],
									"signatures": [
										{
											"id": 13,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 14,
													"name": "node",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Node",
														"qualifiedName": "Node",
														"package": "@typescript-eslint/types"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@typescript-eslint/types"
							}
						]
					}
				}
			]
		},
		{
			"id": 1,
			"name": "findFirstMatchingLocalAncestor",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ancestor.ts",
					"line": 25,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ancestor.ts#L25"
				}
			],
			"signatures": [
				{
					"id": 2,
					"name": "findFirstMatchingLocalAncestor",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 3,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@typescript-eslint/types"
							}
						},
						{
							"id": 4,
							"name": "predicate",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "src/linting/eslint/rules/helpers/ancestor.ts",
											"line": 27,
											"character": 13,
											"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ancestor.ts#L27"
										}
									],
									"signatures": [
										{
											"id": 6,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 7,
													"name": "node",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Node",
														"qualifiedName": "Node",
														"package": "@typescript-eslint/types"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@typescript-eslint/types"
							}
						]
					}
				}
			]
		},
		{
			"id": 237,
			"name": "flatMap",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/collection.ts",
					"line": 42,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/collection.ts#L42"
				}
			],
			"signatures": [
				{
					"id": 238,
					"name": "flatMap",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 239,
							"name": "A",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 240,
							"name": "B",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 241,
							"name": "xs",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 239,
									"name": "A"
								}
							}
						},
						{
							"id": 242,
							"name": "f",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 243,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "src/linting/eslint/rules/helpers/collection.ts",
											"line": 42,
											"character": 42,
											"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/collection.ts#L42"
										}
									],
									"signatures": [
										{
											"id": 244,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 245,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"id": 239,
														"name": "A"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 240,
													"name": "B"
												}
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 240,
							"name": "B"
						}
					}
				}
			]
		},
		{
			"id": 144,
			"name": "flattenArgs",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 354,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L354"
				}
			],
			"signatures": [
				{
					"id": 145,
					"name": "flattenArgs",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Takes array of arguments. Keeps following variable definitions\nand unpacking arrays as long as possible. Returns flattened\narray with all collected nodes.\n\nA usage example should clarify why this might be useful.\nAccording to ExpressJs "
							},
							{
								"kind": "code",
								"text": "`app.use`"
							},
							{
								"kind": "text",
								"text": " spec, the arguments can be:\n\n- A middleware function.\n- A series of middleware functions (separated by commas).\n- An array of middleware functions.\n- A combination of all of the above.\n\nThis means that methods like "
							},
							{
								"kind": "code",
								"text": "`app.use`"
							},
							{
								"kind": "text",
								"text": " accept variable arguments,\nbut also arrays, or combinations thereof. This methods helps\nto flatten out such complicated composed argument lists."
							}
						]
					},
					"parameters": [
						{
							"id": 146,
							"name": "context",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "RuleContext",
								"qualifiedName": "Rule.RuleContext",
								"package": "@types/eslint"
							}
						},
						{
							"id": 147,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Node",
									"qualifiedName": "Node",
									"package": "@types/estree"
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "estree.Node",
							"qualifiedName": "Node",
							"package": "@types/estree"
						}
					}
				}
			]
		},
		{
			"id": 389,
			"name": "getFullyQualifiedName",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/module.ts",
					"line": 96,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/module.ts#L96"
				}
			],
			"signatures": [
				{
					"id": 390,
					"name": "getFullyQualifiedName",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the fully qualified name of ESLint node\n\nA fully qualified name here denotes a value that is accessed through an imported\nsymbol, e.g., "
							},
							{
								"kind": "code",
								"text": "`foo.bar.baz`"
							},
							{
								"kind": "text",
								"text": " where "
							},
							{
								"kind": "code",
								"text": "`foo`"
							},
							{
								"kind": "text",
								"text": " was imported either from a require call\nor an import statement:\n\n"
							},
							{
								"kind": "code",
								"text": "```\nconst foo = require('lib');\nfoo.bar.baz.qux; // matches the fully qualified name ['lib', 'bar', 'baz', 'qux']\nconst foo2 = require('lib').bar;\nfoo2.baz.qux; // matches the fully qualified name ['lib', 'bar', 'baz', 'qux']\n```"
							},
							{
								"kind": "text",
								"text": "\n\nReturns null when an FQN could not be found."
							}
						]
					},
					"parameters": [
						{
							"id": 391,
							"name": "context",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the rule context"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "RuleContext",
								"qualifiedName": "Rule.RuleContext",
								"package": "@types/eslint"
							}
						},
						{
							"id": 392,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the node"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						},
						{
							"id": 393,
							"name": "fqn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the already traversed FQN (for recursive calls)"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "[]"
						},
						{
							"id": 394,
							"name": "scope",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "scope to look for the variable definition, used in recursion not to\n             loop over same variable always in the lower scope"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Scope",
								"qualifiedName": "Scope.Scope",
								"package": "@types/eslint"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "literal",
								"value": null
							}
						]
					}
				}
			]
		},
		{
			"id": 380,
			"name": "getImportDeclarations",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/module.ts",
					"line": 26,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/module.ts#L26"
				}
			],
			"signatures": [
				{
					"id": 381,
					"name": "getImportDeclarations",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 382,
							"name": "context",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "RuleContext",
								"qualifiedName": "Rule.RuleContext",
								"package": "@types/eslint"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "ImportDeclaration",
							"qualifiedName": "ImportDeclaration",
							"package": "@types/estree"
						}
					}
				}
			]
		},
		{
			"id": 133,
			"name": "getLhsVariable",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 308,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L308"
				}
			],
			"signatures": [
				{
					"id": 134,
					"name": "getLhsVariable",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "for "
							},
							{
								"kind": "code",
								"text": "`x = 42`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`let x = 42`"
							},
							{
								"kind": "text",
								"text": " when visiting '42' returns 'x' variable"
							}
						]
					},
					"parameters": [
						{
							"id": 135,
							"name": "context",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "RuleContext",
								"qualifiedName": "Rule.RuleContext",
								"package": "@types/eslint"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Scope.Variable",
								"qualifiedName": "Scope.Variable",
								"package": "@types/eslint"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 386,
			"name": "getModuleNameFromRequire",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/module.ts",
					"line": 64,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/module.ts#L64"
				}
			],
			"signatures": [
				{
					"id": 387,
					"name": "getModuleNameFromRequire",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 388,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 222,
								"name": "Node"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "estree.Literal",
								"qualifiedName": "Literal",
								"package": "@types/estree"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 25,
			"name": "getNodeParent",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ancestor.ts",
					"line": 76,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ancestor.ts#L76"
				}
			],
			"signatures": [
				{
					"id": 26,
					"name": "getNodeParent",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the parent of an ESLint node\n\nThis function assumes that an ESLint node exposes a parent property,\nwhich is always defined. However, it's better to use "
							},
							{
								"kind": "code",
								"text": "`getParent`"
							},
							{
								"kind": "text",
								"text": " if\nit is possible to retrieve the parent based on the rule context.\n\nIt should eventually disappear once we come up with a proper solution\nagainst the conflicting typings between ESLint and TypeScript ESLint\nwhen it comes to the parent of a node."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "the parent node"
									}
								]
							}
						]
					},
					"parameters": [
						{
							"id": 27,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an ESLint node"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Node",
						"qualifiedName": "Node",
						"package": "@types/estree"
					}
				}
			]
		},
		{
			"id": 152,
			"name": "getObjectExpressionProperty",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 416,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L416"
				}
			],
			"signatures": [
				{
					"id": 153,
					"name": "getObjectExpressionProperty",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 154,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"name": "Node",
										"qualifiedName": "Node",
										"package": "@types/estree"
									}
								]
							}
						},
						{
							"id": 155,
							"name": "propertyKey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "estree.Property",
								"qualifiedName": "Property",
								"package": "@types/estree"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 22,
			"name": "getParent",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ancestor.ts",
					"line": 57,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ancestor.ts#L57"
				}
			],
			"signatures": [
				{
					"id": 23,
					"name": "getParent",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 24,
							"name": "context",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "RuleContext",
								"qualifiedName": "Rule.RuleContext",
								"package": "@types/eslint"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "MethodDefinition",
								"qualifiedName": "MethodDefinition",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "Property",
								"qualifiedName": "Property",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "CatchClause",
								"qualifiedName": "CatchClause",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ClassDeclaration",
								"qualifiedName": "ClassDeclaration",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ClassExpression",
								"qualifiedName": "ClassExpression",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ClassBody",
								"qualifiedName": "ClassBody",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "FunctionExpression",
								"qualifiedName": "FunctionExpression",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ArrowFunctionExpression",
								"qualifiedName": "ArrowFunctionExpression",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "Identifier",
								"qualifiedName": "Identifier",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "SimpleLiteral",
								"qualifiedName": "SimpleLiteral",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "RegExpLiteral",
								"qualifiedName": "RegExpLiteral",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "BigIntLiteral",
								"qualifiedName": "BigIntLiteral",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ArrayExpression",
								"qualifiedName": "ArrayExpression",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "AssignmentExpression",
								"qualifiedName": "AssignmentExpression",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "AwaitExpression",
								"qualifiedName": "AwaitExpression",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "BinaryExpression",
								"qualifiedName": "BinaryExpression",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "SimpleCallExpression",
								"qualifiedName": "SimpleCallExpression",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "NewExpression",
								"qualifiedName": "NewExpression",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ChainExpression",
								"qualifiedName": "ChainExpression",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ConditionalExpression",
								"qualifiedName": "ConditionalExpression",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ImportExpression",
								"qualifiedName": "ImportExpression",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "LogicalExpression",
								"qualifiedName": "LogicalExpression",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "MemberExpression",
								"qualifiedName": "MemberExpression",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "MetaProperty",
								"qualifiedName": "MetaProperty",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ObjectExpression",
								"qualifiedName": "ObjectExpression",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "SequenceExpression",
								"qualifiedName": "SequenceExpression",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "TaggedTemplateExpression",
								"qualifiedName": "TaggedTemplateExpression",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "TemplateLiteral",
								"qualifiedName": "TemplateLiteral",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ThisExpression",
								"qualifiedName": "ThisExpression",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "UnaryExpression",
								"qualifiedName": "UnaryExpression",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "UpdateExpression",
								"qualifiedName": "UpdateExpression",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "YieldExpression",
								"qualifiedName": "YieldExpression",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "FunctionDeclaration",
								"qualifiedName": "FunctionDeclaration",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ImportDeclaration",
								"qualifiedName": "ImportDeclaration",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ExportNamedDeclaration",
								"qualifiedName": "ExportNamedDeclaration",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ExportDefaultDeclaration",
								"qualifiedName": "ExportDefaultDeclaration",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ExportAllDeclaration",
								"qualifiedName": "ExportAllDeclaration",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ImportSpecifier",
								"qualifiedName": "ImportSpecifier",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ImportDefaultSpecifier",
								"qualifiedName": "ImportDefaultSpecifier",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ImportNamespaceSpecifier",
								"qualifiedName": "ImportNamespaceSpecifier",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ExportSpecifier",
								"qualifiedName": "ExportSpecifier",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ObjectPattern",
								"qualifiedName": "ObjectPattern",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ArrayPattern",
								"qualifiedName": "ArrayPattern",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "RestElement",
								"qualifiedName": "RestElement",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "AssignmentPattern",
								"qualifiedName": "AssignmentPattern",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "PrivateIdentifier",
								"qualifiedName": "PrivateIdentifier",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "Program",
								"qualifiedName": "Program",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "PropertyDefinition",
								"qualifiedName": "PropertyDefinition",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "SpreadElement",
								"qualifiedName": "SpreadElement",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ExpressionStatement",
								"qualifiedName": "ExpressionStatement",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "BlockStatement",
								"qualifiedName": "BlockStatement",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "StaticBlock",
								"qualifiedName": "StaticBlock",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "EmptyStatement",
								"qualifiedName": "EmptyStatement",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "DebuggerStatement",
								"qualifiedName": "DebuggerStatement",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "WithStatement",
								"qualifiedName": "WithStatement",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ReturnStatement",
								"qualifiedName": "ReturnStatement",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "LabeledStatement",
								"qualifiedName": "LabeledStatement",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "BreakStatement",
								"qualifiedName": "BreakStatement",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ContinueStatement",
								"qualifiedName": "ContinueStatement",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "IfStatement",
								"qualifiedName": "IfStatement",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "SwitchStatement",
								"qualifiedName": "SwitchStatement",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ThrowStatement",
								"qualifiedName": "ThrowStatement",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "TryStatement",
								"qualifiedName": "TryStatement",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "WhileStatement",
								"qualifiedName": "WhileStatement",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "DoWhileStatement",
								"qualifiedName": "DoWhileStatement",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ForStatement",
								"qualifiedName": "ForStatement",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ForInStatement",
								"qualifiedName": "ForInStatement",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "ForOfStatement",
								"qualifiedName": "ForOfStatement",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "VariableDeclaration",
								"qualifiedName": "VariableDeclaration",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "Super",
								"qualifiedName": "Super",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "SwitchCase",
								"qualifiedName": "SwitchCase",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "TemplateElement",
								"qualifiedName": "TemplateElement",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "VariableDeclarator",
								"qualifiedName": "VariableDeclarator",
								"package": "@types/estree"
							}
						]
					}
				}
			]
		},
		{
			"id": 162,
			"name": "getProperty",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 448,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L448"
				}
			],
			"signatures": [
				{
					"id": 163,
					"name": "getProperty",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 164,
							"name": "expr",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "ObjectExpression",
								"qualifiedName": "ObjectExpression",
								"package": "@types/estree"
							}
						},
						{
							"id": 165,
							"name": "key",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 166,
							"name": "ctx",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "RuleContext",
								"qualifiedName": "Rule.RuleContext",
								"package": "@types/eslint"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "estree.Property",
								"qualifiedName": "Property",
								"package": "@types/estree"
							},
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 156,
			"name": "getPropertyWithValue",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 432,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L432"
				}
			],
			"signatures": [
				{
					"id": 157,
					"name": "getPropertyWithValue",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 158,
							"name": "context",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "RuleContext",
								"qualifiedName": "Rule.RuleContext",
								"package": "@types/eslint"
							}
						},
						{
							"id": 159,
							"name": "objectExpression",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "ObjectExpression",
								"qualifiedName": "ObjectExpression",
								"package": "@types/estree"
							}
						},
						{
							"id": 160,
							"name": "propertyName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 161,
							"name": "propertyValue",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "bigint"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "RegExp",
										"qualifiedName": "RegExp",
										"package": "typescript"
									}
								]
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "estree.Property",
								"qualifiedName": "Property",
								"package": "@types/estree"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 383,
			"name": "getRequireCalls",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/module.ts",
					"line": 36,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/module.ts#L36"
				}
			],
			"signatures": [
				{
					"id": 384,
					"name": "getRequireCalls",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 385,
							"name": "context",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "RuleContext",
								"qualifiedName": "Rule.RuleContext",
								"package": "@types/eslint"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "CallExpression",
							"qualifiedName": "CallExpression",
							"package": "@types/estree"
						}
					}
				}
			]
		},
		{
			"id": 496,
			"name": "getSignatureFromCallee",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/type.ts",
					"line": 96,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/type.ts#L96"
				}
			],
			"signatures": [
				{
					"id": 497,
					"name": "getSignatureFromCallee",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 498,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						},
						{
							"id": 499,
							"name": "services",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 504,
								"name": "RequiredParserServices",
								"qualifiedName": "RequiredParserServices",
								"package": "eslint-plugin-sonarjs"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Signature",
								"qualifiedName": "ts.Signature",
								"package": "typescript"
							}
						]
					}
				}
			]
		},
		{
			"id": 492,
			"name": "getSymbolAtLocation",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/type.ts",
					"line": 91,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/type.ts#L91"
				}
			],
			"signatures": [
				{
					"id": 493,
					"name": "getSymbolAtLocation",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 494,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						},
						{
							"id": 495,
							"name": "services",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 504,
								"name": "RequiredParserServices",
								"qualifiedName": "RequiredParserServices",
								"package": "eslint-plugin-sonarjs"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Symbol",
								"qualifiedName": "ts.Symbol",
								"package": "typescript"
							}
						]
					}
				}
			]
		},
		{
			"id": 488,
			"name": "getTypeAsString",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/type.ts",
					"line": 86,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/type.ts#L86"
				}
			],
			"signatures": [
				{
					"id": 489,
					"name": "getTypeAsString",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 490,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						},
						{
							"id": 491,
							"name": "services",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 504,
								"name": "RequiredParserServices",
								"qualifiedName": "RequiredParserServices",
								"package": "eslint-plugin-sonarjs"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 484,
			"name": "getTypeFromTreeNode",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/type.ts",
					"line": 81,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/type.ts#L81"
				}
			],
			"signatures": [
				{
					"id": 485,
					"name": "getTypeFromTreeNode",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 486,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						},
						{
							"id": 487,
							"name": "services",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 504,
								"name": "RequiredParserServices",
								"qualifiedName": "RequiredParserServices",
								"package": "eslint-plugin-sonarjs"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Type",
						"qualifiedName": "ts.Type",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 116,
			"name": "getUniqueWriteReference",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 241,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L241"
				}
			],
			"signatures": [
				{
					"id": 117,
					"name": "getUniqueWriteReference",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 118,
							"name": "variable",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"name": "Variable",
										"qualifiedName": "Scope.Variable",
										"package": "@types/eslint"
									}
								]
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "estree.Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 112,
			"name": "getUniqueWriteUsage",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 236,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L236"
				}
			],
			"signatures": [
				{
					"id": 113,
					"name": "getUniqueWriteUsage",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 114,
							"name": "context",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "RuleContext",
								"qualifiedName": "Rule.RuleContext",
								"package": "@types/eslint"
							}
						},
						{
							"id": 115,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						]
					}
				}
			]
		},
		{
			"id": 119,
			"name": "getUniqueWriteUsageOrNode",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 253,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L253"
				}
			],
			"signatures": [
				{
					"id": 120,
					"name": "getUniqueWriteUsageOrNode",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 121,
							"name": "context",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "RuleContext",
								"qualifiedName": "Rule.RuleContext",
								"package": "@types/eslint"
							}
						},
						{
							"id": 122,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						},
						{
							"id": 123,
							"name": "recursive",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						}
					],
					"type": {
						"type": "reference",
						"name": "estree.Node",
						"qualifiedName": "Node",
						"package": "@types/estree"
					}
				}
			]
		},
		{
			"id": 124,
			"name": "getValueOfExpression",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 270,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L270"
				}
			],
			"signatures": [
				{
					"id": 125,
					"name": "getValueOfExpression",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 126,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "FunctionDeclaration"
									},
									{
										"type": "literal",
										"value": "FunctionExpression"
									},
									{
										"type": "literal",
										"value": "ArrowFunctionExpression"
									},
									{
										"type": "literal",
										"value": "MethodDefinition"
									},
									{
										"type": "literal",
										"value": "CatchClause"
									},
									{
										"type": "literal",
										"value": "ClassBody"
									},
									{
										"type": "literal",
										"value": "Identifier"
									},
									{
										"type": "literal",
										"value": "Literal"
									},
									{
										"type": "literal",
										"value": "PrivateIdentifier"
									},
									{
										"type": "literal",
										"value": "Program"
									},
									{
										"type": "literal",
										"value": "Property"
									},
									{
										"type": "literal",
										"value": "PropertyDefinition"
									},
									{
										"type": "literal",
										"value": "SpreadElement"
									},
									{
										"type": "literal",
										"value": "Super"
									},
									{
										"type": "literal",
										"value": "SwitchCase"
									},
									{
										"type": "literal",
										"value": "TemplateElement"
									},
									{
										"type": "literal",
										"value": "VariableDeclarator"
									},
									{
										"type": "literal",
										"value": "ArrayExpression"
									},
									{
										"type": "literal",
										"value": "AssignmentExpression"
									},
									{
										"type": "literal",
										"value": "AwaitExpression"
									},
									{
										"type": "literal",
										"value": "BinaryExpression"
									},
									{
										"type": "literal",
										"value": "CallExpression"
									},
									{
										"type": "literal",
										"value": "ChainExpression"
									},
									{
										"type": "literal",
										"value": "ClassExpression"
									},
									{
										"type": "literal",
										"value": "ConditionalExpression"
									},
									{
										"type": "literal",
										"value": "ImportExpression"
									},
									{
										"type": "literal",
										"value": "LogicalExpression"
									},
									{
										"type": "literal",
										"value": "MemberExpression"
									},
									{
										"type": "literal",
										"value": "MetaProperty"
									},
									{
										"type": "literal",
										"value": "NewExpression"
									},
									{
										"type": "literal",
										"value": "ObjectExpression"
									},
									{
										"type": "literal",
										"value": "SequenceExpression"
									},
									{
										"type": "literal",
										"value": "TaggedTemplateExpression"
									},
									{
										"type": "literal",
										"value": "TemplateLiteral"
									},
									{
										"type": "literal",
										"value": "ThisExpression"
									},
									{
										"type": "literal",
										"value": "UnaryExpression"
									},
									{
										"type": "literal",
										"value": "UpdateExpression"
									},
									{
										"type": "literal",
										"value": "YieldExpression"
									},
									{
										"type": "literal",
										"value": "ClassDeclaration"
									},
									{
										"type": "literal",
										"value": "ImportDeclaration"
									},
									{
										"type": "literal",
										"value": "ExportNamedDeclaration"
									},
									{
										"type": "literal",
										"value": "ExportDefaultDeclaration"
									},
									{
										"type": "literal",
										"value": "ExportAllDeclaration"
									},
									{
										"type": "literal",
										"value": "ImportSpecifier"
									},
									{
										"type": "literal",
										"value": "ImportDefaultSpecifier"
									},
									{
										"type": "literal",
										"value": "ImportNamespaceSpecifier"
									},
									{
										"type": "literal",
										"value": "ExportSpecifier"
									},
									{
										"type": "literal",
										"value": "ObjectPattern"
									},
									{
										"type": "literal",
										"value": "ArrayPattern"
									},
									{
										"type": "literal",
										"value": "RestElement"
									},
									{
										"type": "literal",
										"value": "AssignmentPattern"
									},
									{
										"type": "literal",
										"value": "ExpressionStatement"
									},
									{
										"type": "literal",
										"value": "BlockStatement"
									},
									{
										"type": "literal",
										"value": "StaticBlock"
									},
									{
										"type": "literal",
										"value": "EmptyStatement"
									},
									{
										"type": "literal",
										"value": "DebuggerStatement"
									},
									{
										"type": "literal",
										"value": "WithStatement"
									},
									{
										"type": "literal",
										"value": "ReturnStatement"
									},
									{
										"type": "literal",
										"value": "LabeledStatement"
									},
									{
										"type": "literal",
										"value": "BreakStatement"
									},
									{
										"type": "literal",
										"value": "ContinueStatement"
									},
									{
										"type": "literal",
										"value": "IfStatement"
									},
									{
										"type": "literal",
										"value": "SwitchStatement"
									},
									{
										"type": "literal",
										"value": "ThrowStatement"
									},
									{
										"type": "literal",
										"value": "TryStatement"
									},
									{
										"type": "literal",
										"value": "WhileStatement"
									},
									{
										"type": "literal",
										"value": "DoWhileStatement"
									},
									{
										"type": "literal",
										"value": "ForStatement"
									},
									{
										"type": "literal",
										"value": "ForInStatement"
									},
									{
										"type": "literal",
										"value": "ForOfStatement"
									},
									{
										"type": "literal",
										"value": "VariableDeclaration"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 127,
							"name": "context",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "RuleContext",
								"qualifiedName": "Rule.RuleContext",
								"package": "@types/eslint"
							}
						},
						{
							"id": 128,
							"name": "expr",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"name": "Node",
										"qualifiedName": "Node",
										"package": "@types/estree"
									}
								]
							}
						},
						{
							"id": 129,
							"name": "type",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 126,
								"name": "T"
							}
						},
						{
							"id": 130,
							"name": "recursive",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "estree.Node",
										"qualifiedName": "Node",
										"package": "@types/estree"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 131,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 132,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/linting/eslint/rules/helpers/ast.ts",
															"line": 275,
															"character": 26,
															"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L275"
														}
													],
													"type": {
														"type": "reference",
														"id": 126,
														"name": "T"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														132
													]
												}
											],
											"sources": [
												{
													"fileName": "src/linting/eslint/rules/helpers/ast.ts",
													"line": 275,
													"character": 24,
													"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L275"
												}
											]
										}
									}
								],
								"name": "Extract",
								"qualifiedName": "Extract",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 420,
			"name": "getVariableFromIdentifier",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/reaching-definitions.ts",
					"line": 167,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/reaching-definitions.ts#L167"
				}
			],
			"signatures": [
				{
					"id": 421,
					"name": "getVariableFromIdentifier",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 422,
							"name": "identifier",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Identifier",
								"qualifiedName": "Identifier",
								"package": "@types/estree"
							}
						},
						{
							"id": 423,
							"name": "scope",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Scope",
								"qualifiedName": "Scope.Scope",
								"package": "@types/eslint"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Variable",
								"qualifiedName": "Scope.Variable",
								"package": "@types/eslint"
							}
						]
					}
				}
			]
		},
		{
			"id": 140,
			"name": "getVariableFromName",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 332,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L332"
				}
			],
			"signatures": [
				{
					"id": 141,
					"name": "getVariableFromName",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 142,
							"name": "context",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "RuleContext",
								"qualifiedName": "Rule.RuleContext",
								"package": "@types/eslint"
							}
						},
						{
							"id": 143,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Variable",
								"qualifiedName": "Scope.Variable",
								"package": "@types/eslint"
							}
						]
					}
				}
			]
		},
		{
			"id": 136,
			"name": "getVariableFromScope",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 323,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L323"
				}
			],
			"signatures": [
				{
					"id": 137,
					"name": "getVariableFromScope",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 138,
							"name": "scope",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"name": "Scope",
										"qualifiedName": "Scope.Scope",
										"package": "@types/eslint"
									}
								]
							}
						},
						{
							"id": 139,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Variable",
								"qualifiedName": "Scope.Variable",
								"package": "@types/eslint"
							}
						]
					}
				}
			]
		},
		{
			"id": 481,
			"name": "isAny",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/type.ts",
					"line": 77,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/type.ts#L77"
				}
			],
			"signatures": [
				{
					"id": 482,
					"name": "isAny",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 483,
							"name": "type",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Type",
								"qualifiedName": "ts.Type",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 448,
			"name": "isArray",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/type.ts",
					"line": 27,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/type.ts#L27"
				}
			],
			"signatures": [
				{
					"id": 449,
					"name": "isArray",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 450,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						},
						{
							"id": 451,
							"name": "services",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 504,
								"name": "RequiredParserServices",
								"qualifiedName": "RequiredParserServices",
								"package": "eslint-plugin-sonarjs"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 49,
			"name": "isArrayExpression",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 93,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L93"
				}
			],
			"signatures": [
				{
					"id": 50,
					"name": "isArrayExpression",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 51,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"name": "Node",
										"qualifiedName": "Node",
										"package": "@types/estree"
									}
								]
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "node",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"name": "ArrayExpression",
							"qualifiedName": "ArrayExpression",
							"package": "@types/estree"
						}
					}
				}
			]
		},
		{
			"id": 460,
			"name": "isBigIntType",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/type.ts",
					"line": 44,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/type.ts#L44"
				}
			],
			"signatures": [
				{
					"id": 461,
					"name": "isBigIntType",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 462,
							"name": "type",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Type",
								"qualifiedName": "ts.Type",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 41,
			"name": "isBinaryPlus",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 83,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L83"
				}
			],
			"signatures": [
				{
					"id": 42,
					"name": "isBinaryPlus",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 43,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "node",
						"asserts": false,
						"targetType": {
							"type": "intersection",
							"types": [
								{
									"type": "reference",
									"name": "BinaryExpression",
									"qualifiedName": "BinaryExpression",
									"package": "@types/estree"
								},
								{
									"type": "reflection",
									"declaration": {
										"id": 44,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 45,
												"name": "operator",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "src/linting/eslint/rules/helpers/ast.ts",
														"line": 85,
														"character": 39,
														"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L85"
													}
												],
												"type": {
													"type": "literal",
													"value": "+"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													45
												]
											}
										],
										"sources": [
											{
												"fileName": "src/linting/eslint/rules/helpers/ast.ts",
												"line": 85,
												"character": 37,
												"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L85"
											}
										]
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 186,
			"name": "isBooleanLiteral",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 549,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L549"
				}
			],
			"signatures": [
				{
					"id": 187,
					"name": "isBooleanLiteral",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 188,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "node",
						"asserts": false,
						"targetType": {
							"type": "intersection",
							"types": [
								{
									"type": "reference",
									"name": "Literal",
									"qualifiedName": "Literal",
									"package": "@types/estree"
								},
								{
									"type": "reflection",
									"declaration": {
										"id": 189,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 190,
												"name": "value",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "src/linting/eslint/rules/helpers/ast.ts",
														"line": 549,
														"character": 80,
														"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L549"
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "boolean"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													190
												]
											}
										],
										"sources": [
											{
												"fileName": "src/linting/eslint/rules/helpers/ast.ts",
												"line": 549,
												"character": 78,
												"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L549"
											}
										]
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 73,
			"name": "isCallingMethod",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 151,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L151"
				}
			],
			"signatures": [
				{
					"id": 74,
					"name": "isCallingMethod",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 75,
							"name": "callExpr",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "CallExpression",
								"qualifiedName": "CallExpression",
								"package": "@types/estree"
							}
						},
						{
							"id": 76,
							"name": "arity",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 77,
							"name": "methodNames",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "callExpr",
						"asserts": false,
						"targetType": {
							"type": "intrinsic",
							"name": "Object"
						}
					}
				}
			]
		},
		{
			"id": 82,
			"name": "isDefaultSpecifier",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 171,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L171"
				}
			],
			"signatures": [
				{
					"id": 83,
					"name": "isDefaultSpecifier",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 84,
							"name": "importDeclaration",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "ImportDeclaration",
								"qualifiedName": "ImportDeclaration",
								"package": "@types/estree"
							}
						},
						{
							"id": 85,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 197,
			"name": "isDotNotation",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 561,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L561"
				}
			],
			"signatures": [
				{
					"id": 198,
					"name": "isDotNotation",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 199,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "node",
						"asserts": false,
						"targetType": {
							"type": "intersection",
							"types": [
								{
									"type": "reference",
									"name": "MemberExpression",
									"qualifiedName": "MemberExpression",
									"package": "@types/estree"
								},
								{
									"type": "reflection",
									"declaration": {
										"id": 200,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 201,
												"name": "property",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "src/linting/eslint/rules/helpers/ast.ts",
														"line": 563,
														"character": 39,
														"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L563"
													}
												],
												"type": {
													"type": "reference",
													"name": "Identifier",
													"qualifiedName": "Identifier",
													"package": "@types/estree"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													201
												]
											}
										],
										"sources": [
											{
												"fileName": "src/linting/eslint/rules/helpers/ast.ts",
												"line": 563,
												"character": 37,
												"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L563"
											}
										]
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 104,
			"name": "isElementWrite",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 216,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L216"
				}
			],
			"signatures": [
				{
					"id": 105,
					"name": "isElementWrite",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Detect expression statements like the following:\n myArray[1] = 42;\n myArray[1] += 42;\n myObj.prop1 = 3;\n myObj.prop1 += 3;"
							}
						]
					},
					"parameters": [
						{
							"id": 106,
							"name": "statement",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "ExpressionStatement",
								"qualifiedName": "ExpressionStatement",
								"package": "@types/estree"
							}
						},
						{
							"id": 107,
							"name": "ref",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Reference",
								"qualifiedName": "Scope.Reference",
								"package": "@types/eslint"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 98,
			"name": "isFalseLiteral",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 201,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L201"
				}
			],
			"signatures": [
				{
					"id": 99,
					"name": "isFalseLiteral",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 100,
							"name": "n",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 469,
			"name": "isFunction",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/type.ts",
					"line": 56,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/type.ts#L56"
				}
			],
			"signatures": [
				{
					"id": 470,
					"name": "isFunction",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 471,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						},
						{
							"id": 472,
							"name": "services",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 504,
								"name": "RequiredParserServices",
								"qualifiedName": "RequiredParserServices",
								"package": "eslint-plugin-sonarjs"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 67,
			"name": "isFunctionCall",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 135,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L135"
				}
			],
			"signatures": [
				{
					"id": 68,
					"name": "isFunctionCall",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 69,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "node",
						"asserts": false,
						"targetType": {
							"type": "intrinsic",
							"name": "Object"
						}
					}
				}
			]
		},
		{
			"id": 62,
			"name": "isFunctionInvocation",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 123,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L123"
				}
			],
			"signatures": [
				{
					"id": 63,
					"name": "isFunctionInvocation",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 64,
							"name": "callExpression",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "CallExpression",
								"qualifiedName": "CallExpression",
								"package": "@types/estree"
							}
						},
						{
							"id": 65,
							"name": "functionName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 66,
							"name": "minArgs",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 89,
			"name": "isFunctionNode",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 187,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L187"
				}
			],
			"signatures": [
				{
					"id": 90,
					"name": "isFunctionNode",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 91,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "node",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 224,
							"name": "FunctionNodeType"
						}
					}
				}
			]
		},
		{
			"id": 28,
			"name": "isIdentifier",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 54,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L54"
				}
			],
			"signatures": [
				{
					"id": 29,
					"name": "isIdentifier",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 30,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 222,
										"name": "Node"
									}
								]
							}
						},
						{
							"id": 31,
							"name": "values",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "node",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"name": "Identifier",
							"qualifiedName": "Identifier",
							"package": "@types/estree"
						}
					}
				}
			]
		},
		{
			"id": 92,
			"name": "isLiteral",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 193,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L193"
				}
			],
			"signatures": [
				{
					"id": 93,
					"name": "isLiteral",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 94,
							"name": "n",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"name": "Node",
										"qualifiedName": "Node",
										"package": "@types/estree"
									}
								]
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "n",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"name": "Literal",
							"qualifiedName": "Literal",
							"package": "@types/estree"
						}
					}
				}
			]
		},
		{
			"id": 284,
			"name": "isMainCode",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/file.ts",
					"line": 23,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/file.ts#L23"
				}
			],
			"signatures": [
				{
					"id": 285,
					"name": "isMainCode",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 286,
							"name": "context",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "RuleContext",
								"qualifiedName": "Rule.RuleContext",
								"package": "@types/eslint"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 36,
			"name": "isMemberExpression",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 68,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L68"
				}
			],
			"signatures": [
				{
					"id": 37,
					"name": "isMemberExpression",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 38,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						},
						{
							"id": 39,
							"name": "objectValue",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 40,
							"name": "propertyValue",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 32,
			"name": "isMemberWithProperty",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 64,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L64"
				}
			],
			"signatures": [
				{
					"id": 33,
					"name": "isMemberWithProperty",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 34,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						},
						{
							"id": 35,
							"name": "values",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 70,
			"name": "isMethodCall",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 141,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L141"
				}
			],
			"signatures": [
				{
					"id": 71,
					"name": "isMethodCall",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 72,
							"name": "callExpr",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "CallExpression",
								"qualifiedName": "CallExpression",
								"package": "@types/estree"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "callExpr",
						"asserts": false,
						"targetType": {
							"type": "intrinsic",
							"name": "Object"
						}
					}
				}
			]
		},
		{
			"id": 56,
			"name": "isMethodInvocation",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 108,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L108"
				}
			],
			"signatures": [
				{
					"id": 57,
					"name": "isMethodInvocation",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 58,
							"name": "callExpression",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "CallExpression",
								"qualifiedName": "CallExpression",
								"package": "@types/estree"
							}
						},
						{
							"id": 59,
							"name": "objectIdentifierName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60,
							"name": "methodName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 61,
							"name": "minArgs",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 86,
			"name": "isModuleExports",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 177,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L177"
				}
			],
			"signatures": [
				{
					"id": 87,
					"name": "isModuleExports",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 88,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 78,
			"name": "isNamespaceSpecifier",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 165,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L165"
				}
			],
			"signatures": [
				{
					"id": 79,
					"name": "isNamespaceSpecifier",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 80,
							"name": "importDeclaration",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "ImportDeclaration",
								"qualifiedName": "ImportDeclaration",
								"package": "@types/estree"
							}
						},
						{
							"id": 81,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 95,
			"name": "isNullLiteral",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 197,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L197"
				}
			],
			"signatures": [
				{
					"id": 96,
					"name": "isNullLiteral",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 97,
							"name": "n",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 456,
			"name": "isNumber",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/type.ts",
					"line": 38,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/type.ts#L38"
				}
			],
			"signatures": [
				{
					"id": 457,
					"name": "isNumber",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 458,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						},
						{
							"id": 459,
							"name": "services",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 504,
								"name": "RequiredParserServices",
								"qualifiedName": "RequiredParserServices",
								"package": "eslint-plugin-sonarjs"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 191,
			"name": "isNumberLiteral",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 553,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L553"
				}
			],
			"signatures": [
				{
					"id": 192,
					"name": "isNumberLiteral",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 193,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "node",
						"asserts": false,
						"targetType": {
							"type": "intrinsic",
							"name": "Object"
						}
					}
				}
			]
		},
		{
			"id": 463,
			"name": "isNumberType",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/type.ts",
					"line": 48,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/type.ts#L48"
				}
			],
			"signatures": [
				{
					"id": 464,
					"name": "isNumberType",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 465,
							"name": "type",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Type",
								"qualifiedName": "ts.Type",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 202,
			"name": "isObjectDestructuring",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 567,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L567"
				}
			],
			"signatures": [
				{
					"id": 203,
					"name": "isObjectDestructuring",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 204,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "node",
						"asserts": false,
						"targetType": {
							"type": "union",
							"types": [
								{
									"type": "intersection",
									"types": [
										{
											"type": "reference",
											"name": "VariableDeclarator",
											"qualifiedName": "VariableDeclarator",
											"package": "@types/estree"
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 205,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 206,
														"name": "id",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"sources": [
															{
																"fileName": "src/linting/eslint/rules/helpers/ast.ts",
																"line": 570,
																"character": 35,
																"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L570"
															}
														],
														"type": {
															"type": "reference",
															"name": "ObjectPattern",
															"qualifiedName": "ObjectPattern",
															"package": "@types/estree"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															206
														]
													}
												],
												"sources": [
													{
														"fileName": "src/linting/eslint/rules/helpers/ast.ts",
														"line": 570,
														"character": 33,
														"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L570"
													}
												]
											}
										}
									]
								},
								{
									"type": "intersection",
									"types": [
										{
											"type": "reference",
											"name": "AssignmentExpression",
											"qualifiedName": "AssignmentExpression",
											"package": "@types/estree"
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 207,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 208,
														"name": "left",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"sources": [
															{
																"fileName": "src/linting/eslint/rules/helpers/ast.ts",
																"line": 571,
																"character": 37,
																"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L571"
															}
														],
														"type": {
															"type": "reference",
															"name": "ObjectPattern",
															"qualifiedName": "ObjectPattern",
															"package": "@types/estree"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															208
														]
													}
												],
												"sources": [
													{
														"fileName": "src/linting/eslint/rules/helpers/ast.ts",
														"line": 571,
														"character": 35,
														"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L571"
													}
												]
											}
										}
									]
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 215,
			"name": "isProperty",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 588,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L588"
				}
			],
			"signatures": [
				{
					"id": 216,
					"name": "isProperty",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 217,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "node",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"name": "Property",
							"qualifiedName": "Property",
							"package": "@types/estree"
						}
					}
				}
			]
		},
		{
			"id": 108,
			"name": "isReferenceTo",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 232,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L232"
				}
			],
			"signatures": [
				{
					"id": 109,
					"name": "isReferenceTo",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 110,
							"name": "ref",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Reference",
								"qualifiedName": "Scope.Reference",
								"package": "@types/eslint"
							}
						},
						{
							"id": 111,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 194,
			"name": "isRegexLiteral",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 557,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L557"
				}
			],
			"signatures": [
				{
					"id": 195,
					"name": "isRegexLiteral",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 196,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "node",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"name": "RegExpLiteral",
							"qualifiedName": "RegExpLiteral",
							"package": "@types/estree"
						}
					}
				}
			]
		},
		{
			"id": 52,
			"name": "isRequireModule",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 97,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L97"
				}
			],
			"signatures": [
				{
					"id": 53,
					"name": "isRequireModule",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 54,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "CallExpression",
								"qualifiedName": "CallExpression",
								"package": "@types/estree"
							}
						},
						{
							"id": 55,
							"name": "moduleNames",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 501,
			"name": "isRequiredParserServices",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExternal": true
			},
			"sources": [
				{
					"fileName": "node_modules/eslint-plugin-sonarjs/lib/utils/parser-services.d.ts",
					"line": 5,
					"character": 24
				}
			],
			"signatures": [
				{
					"id": 502,
					"name": "isRequiredParserServices",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExternal": true
					},
					"parameters": [
						{
							"id": 503,
							"name": "services",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"name": "ParserServices",
										"qualifiedName": "ParserServices",
										"package": "@typescript-eslint/typescript-estree"
									}
								]
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "services",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 504,
							"name": "RequiredParserServices",
							"qualifiedName": "RequiredParserServices",
							"package": "eslint-plugin-sonarjs"
						}
					}
				}
			]
		},
		{
			"id": 209,
			"name": "isStaticTemplateLiteral",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 578,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L578"
				}
			],
			"signatures": [
				{
					"id": 210,
					"name": "isStaticTemplateLiteral",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 211,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "node",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"name": "TemplateLiteral",
							"qualifiedName": "TemplateLiteral",
							"package": "@types/estree"
						}
					}
				}
			]
		},
		{
			"id": 452,
			"name": "isString",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/type.ts",
					"line": 32,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/type.ts#L32"
				}
			],
			"signatures": [
				{
					"id": 453,
					"name": "isString",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 454,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						},
						{
							"id": 455,
							"name": "services",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 504,
								"name": "RequiredParserServices",
								"qualifiedName": "RequiredParserServices",
								"package": "eslint-plugin-sonarjs"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 183,
			"name": "isStringLiteral",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 545,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L545"
				}
			],
			"signatures": [
				{
					"id": 184,
					"name": "isStringLiteral",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 185,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "node",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 225,
							"name": "StringLiteral"
						}
					}
				}
			]
		},
		{
			"id": 466,
			"name": "isStringType",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/type.ts",
					"line": 52,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/type.ts#L52"
				}
			],
			"signatures": [
				{
					"id": 467,
					"name": "isStringType",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 468,
							"name": "type",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Type",
								"qualifiedName": "ts.Type",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 287,
			"name": "isTestCode",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/file.ts",
					"line": 27,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/file.ts#L27"
				}
			],
			"signatures": [
				{
					"id": 288,
					"name": "isTestCode",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 289,
							"name": "context",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "RuleContext",
								"qualifiedName": "Rule.RuleContext",
								"package": "@types/eslint"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 477,
			"name": "isThenable",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/type.ts",
					"line": 70,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/type.ts#L70"
				}
			],
			"signatures": [
				{
					"id": 478,
					"name": "isThenable",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 479,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						},
						{
							"id": 480,
							"name": "services",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 504,
								"name": "RequiredParserServices",
								"qualifiedName": "RequiredParserServices",
								"package": "eslint-plugin-sonarjs"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 212,
			"name": "isThisExpression",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 584,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L584"
				}
			],
			"signatures": [
				{
					"id": 213,
					"name": "isThisExpression",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 214,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "node",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"name": "ThisExpression",
							"qualifiedName": "ThisExpression",
							"package": "@types/estree"
						}
					}
				}
			]
		},
		{
			"id": 46,
			"name": "isUnaryExpression",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 89,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L89"
				}
			],
			"signatures": [
				{
					"id": 47,
					"name": "isUnaryExpression",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 48,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"name": "Node",
										"qualifiedName": "Node",
										"package": "@types/estree"
									}
								]
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "node",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"name": "UnaryExpression",
							"qualifiedName": "UnaryExpression",
							"package": "@types/estree"
						}
					}
				}
			]
		},
		{
			"id": 101,
			"name": "isUndefined",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 205,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L205"
				}
			],
			"signatures": [
				{
					"id": 102,
					"name": "isUndefined",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 103,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 222,
								"name": "Node"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 473,
			"name": "isUndefinedOrNull",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/type.ts",
					"line": 62,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/type.ts#L62"
				}
			],
			"signatures": [
				{
					"id": 474,
					"name": "isUndefinedOrNull",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 475,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						},
						{
							"id": 476,
							"name": "services",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 504,
								"name": "RequiredParserServices",
								"qualifiedName": "RequiredParserServices",
								"package": "eslint-plugin-sonarjs"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 218,
			"name": "isUnresolved",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 602,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L602"
				}
			],
			"signatures": [
				{
					"id": 219,
					"name": "isUnresolved",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Check if an identifier has no known value, meaning:\n\n- It's not imported/required\n- Defined variable without any write references (function parameter?)\n- Non-defined variable (a possible global?)"
							}
						]
					},
					"parameters": [
						{
							"id": 220,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Node to check"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"name": "Node",
										"qualifiedName": "Node",
										"package": "@types/estree"
									}
								]
							}
						},
						{
							"id": 221,
							"name": "ctx",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rule context"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "RuleContext",
								"qualifiedName": "Rule.RuleContext",
								"package": "@types/eslint"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 246,
			"name": "last",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/collection.ts",
					"line": 50,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/collection.ts#L50"
				}
			],
			"signatures": [
				{
					"id": 247,
					"name": "last",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 248,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 249,
							"name": "arr",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 248,
									"name": "T"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 248,
						"name": "T"
					}
				}
			]
		},
		{
			"id": 15,
			"name": "localAncestorsChain",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ancestor.ts",
					"line": 39,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ancestor.ts#L39"
				}
			],
			"signatures": [
				{
					"id": 16,
					"name": "localAncestorsChain",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 17,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@typescript-eslint/types"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Node",
							"qualifiedName": "Node",
							"package": "@typescript-eslint/types"
						}
					}
				}
			]
		},
		{
			"id": 331,
			"name": "lva",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/lva.ts",
					"line": 26,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts#L26"
				}
			],
			"signatures": [
				{
					"id": 332,
					"name": "lva",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 333,
							"name": "liveVariablesMap",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 350,
										"name": "LiveVariables"
									}
								],
								"name": "Map",
								"qualifiedName": "Map",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 411,
			"name": "reachingDefinitions",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/reaching-definitions.ts",
					"line": 42,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/reaching-definitions.ts#L42"
				}
			],
			"signatures": [
				{
					"id": 412,
					"name": "reachingDefinitions",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 413,
							"name": "reachingDefinitionsMap",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 426,
										"name": "ReachingDefinitions"
									}
								],
								"name": "Map",
								"qualifiedName": "Map",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 399,
			"name": "reduceTo",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/module.ts",
					"line": 198,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/module.ts#L198"
				}
			],
			"signatures": [
				{
					"id": 400,
					"name": "reduceTo",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Reduce a given node through its ancestors until a given node type is found\nfilling in the FQN array with the accessed properties."
							}
						]
					},
					"typeParameter": [
						{
							"id": 401,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "FunctionDeclaration"
									},
									{
										"type": "literal",
										"value": "FunctionExpression"
									},
									{
										"type": "literal",
										"value": "ArrowFunctionExpression"
									},
									{
										"type": "literal",
										"value": "MethodDefinition"
									},
									{
										"type": "literal",
										"value": "CatchClause"
									},
									{
										"type": "literal",
										"value": "ClassBody"
									},
									{
										"type": "literal",
										"value": "Identifier"
									},
									{
										"type": "literal",
										"value": "Literal"
									},
									{
										"type": "literal",
										"value": "PrivateIdentifier"
									},
									{
										"type": "literal",
										"value": "Program"
									},
									{
										"type": "literal",
										"value": "Property"
									},
									{
										"type": "literal",
										"value": "PropertyDefinition"
									},
									{
										"type": "literal",
										"value": "SpreadElement"
									},
									{
										"type": "literal",
										"value": "Super"
									},
									{
										"type": "literal",
										"value": "SwitchCase"
									},
									{
										"type": "literal",
										"value": "TemplateElement"
									},
									{
										"type": "literal",
										"value": "VariableDeclarator"
									},
									{
										"type": "literal",
										"value": "ArrayExpression"
									},
									{
										"type": "literal",
										"value": "AssignmentExpression"
									},
									{
										"type": "literal",
										"value": "AwaitExpression"
									},
									{
										"type": "literal",
										"value": "BinaryExpression"
									},
									{
										"type": "literal",
										"value": "CallExpression"
									},
									{
										"type": "literal",
										"value": "ChainExpression"
									},
									{
										"type": "literal",
										"value": "ClassExpression"
									},
									{
										"type": "literal",
										"value": "ConditionalExpression"
									},
									{
										"type": "literal",
										"value": "ImportExpression"
									},
									{
										"type": "literal",
										"value": "LogicalExpression"
									},
									{
										"type": "literal",
										"value": "MemberExpression"
									},
									{
										"type": "literal",
										"value": "MetaProperty"
									},
									{
										"type": "literal",
										"value": "NewExpression"
									},
									{
										"type": "literal",
										"value": "ObjectExpression"
									},
									{
										"type": "literal",
										"value": "SequenceExpression"
									},
									{
										"type": "literal",
										"value": "TaggedTemplateExpression"
									},
									{
										"type": "literal",
										"value": "TemplateLiteral"
									},
									{
										"type": "literal",
										"value": "ThisExpression"
									},
									{
										"type": "literal",
										"value": "UnaryExpression"
									},
									{
										"type": "literal",
										"value": "UpdateExpression"
									},
									{
										"type": "literal",
										"value": "YieldExpression"
									},
									{
										"type": "literal",
										"value": "ClassDeclaration"
									},
									{
										"type": "literal",
										"value": "ImportDeclaration"
									},
									{
										"type": "literal",
										"value": "ExportNamedDeclaration"
									},
									{
										"type": "literal",
										"value": "ExportDefaultDeclaration"
									},
									{
										"type": "literal",
										"value": "ExportAllDeclaration"
									},
									{
										"type": "literal",
										"value": "ImportSpecifier"
									},
									{
										"type": "literal",
										"value": "ImportDefaultSpecifier"
									},
									{
										"type": "literal",
										"value": "ImportNamespaceSpecifier"
									},
									{
										"type": "literal",
										"value": "ExportSpecifier"
									},
									{
										"type": "literal",
										"value": "ObjectPattern"
									},
									{
										"type": "literal",
										"value": "ArrayPattern"
									},
									{
										"type": "literal",
										"value": "RestElement"
									},
									{
										"type": "literal",
										"value": "AssignmentPattern"
									},
									{
										"type": "literal",
										"value": "ExpressionStatement"
									},
									{
										"type": "literal",
										"value": "BlockStatement"
									},
									{
										"type": "literal",
										"value": "StaticBlock"
									},
									{
										"type": "literal",
										"value": "EmptyStatement"
									},
									{
										"type": "literal",
										"value": "DebuggerStatement"
									},
									{
										"type": "literal",
										"value": "WithStatement"
									},
									{
										"type": "literal",
										"value": "ReturnStatement"
									},
									{
										"type": "literal",
										"value": "LabeledStatement"
									},
									{
										"type": "literal",
										"value": "BreakStatement"
									},
									{
										"type": "literal",
										"value": "ContinueStatement"
									},
									{
										"type": "literal",
										"value": "IfStatement"
									},
									{
										"type": "literal",
										"value": "SwitchStatement"
									},
									{
										"type": "literal",
										"value": "ThrowStatement"
									},
									{
										"type": "literal",
										"value": "TryStatement"
									},
									{
										"type": "literal",
										"value": "WhileStatement"
									},
									{
										"type": "literal",
										"value": "DoWhileStatement"
									},
									{
										"type": "literal",
										"value": "ForStatement"
									},
									{
										"type": "literal",
										"value": "ForInStatement"
									},
									{
										"type": "literal",
										"value": "ForOfStatement"
									},
									{
										"type": "literal",
										"value": "VariableDeclaration"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 402,
							"name": "type",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the type of node you are looking for to be returned. Returned node still needs to be\n            checked as its type it's not guaranteed to match the passed type."
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 401,
								"name": "T"
							}
						},
						{
							"id": 403,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the Node to traverse"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						},
						{
							"id": 404,
							"name": "fqn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array with the qualifiers"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "[]"
						}
					],
					"type": {
						"type": "reference",
						"name": "estree.Node",
						"qualifiedName": "Node",
						"package": "@types/estree"
					}
				}
			]
		},
		{
			"id": 395,
			"name": "reduceToIdentifier",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/module.ts",
					"line": 186,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/module.ts#L186"
				}
			],
			"signatures": [
				{
					"id": 396,
					"name": "reduceToIdentifier",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Helper function for getFullyQualifiedName to handle Member expressions\nfilling in the FQN array with the accessed properties."
							}
						]
					},
					"parameters": [
						{
							"id": 397,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the Node to traverse"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						},
						{
							"id": 398,
							"name": "fqn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the array with the qualifiers"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "[]"
						}
					],
					"type": {
						"type": "reference",
						"name": "estree.Node",
						"qualifiedName": "Node",
						"package": "@types/estree"
					}
				}
			]
		},
		{
			"id": 405,
			"name": "removeNodeWithLeadingWhitespaces",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/quickfix.ts",
					"line": 23,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/quickfix.ts#L23"
				}
			],
			"signatures": [
				{
					"id": 406,
					"name": "removeNodeWithLeadingWhitespaces",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 407,
							"name": "context",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "RuleContext",
								"qualifiedName": "Rule.RuleContext",
								"package": "@types/eslint"
							}
						},
						{
							"id": 408,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						},
						{
							"id": 409,
							"name": "fixer",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "RuleFixer",
								"qualifiedName": "Rule.RuleFixer",
								"package": "@types/eslint"
							}
						},
						{
							"id": 410,
							"name": "removeUntil",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Fix",
						"qualifiedName": "Rule.Fix",
						"package": "@types/eslint"
					}
				}
			]
		},
		{
			"id": 414,
			"name": "resolveAssignedValues",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/reaching-definitions.ts",
					"line": 119,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/reaching-definitions.ts#L119"
				}
			],
			"signatures": [
				{
					"id": 415,
					"name": "resolveAssignedValues",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 416,
							"name": "lhsVariable",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Variable",
								"qualifiedName": "Scope.Variable",
								"package": "@types/eslint"
							}
						},
						{
							"id": 417,
							"name": "writeExpr",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"name": "Node",
										"qualifiedName": "Node",
										"package": "@types/estree"
									}
								]
							}
						},
						{
							"id": 418,
							"name": "assignedValuesMap",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Variable",
										"qualifiedName": "Scope.Variable",
										"package": "@types/eslint"
									},
									{
										"type": "reference",
										"id": 425,
										"name": "Values"
									}
								],
								"name": "Map",
								"qualifiedName": "Map",
								"package": "typescript"
							}
						},
						{
							"id": 419,
							"name": "scope",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Scope",
								"qualifiedName": "Scope.Scope",
								"package": "@types/eslint"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 425,
						"name": "Values"
					}
				}
			]
		},
		{
			"id": 167,
			"name": "resolveFromFunctionReference",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 484,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L484"
				}
			],
			"signatures": [
				{
					"id": 168,
					"name": "resolveFromFunctionReference",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 169,
							"name": "context",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "RuleContext",
								"qualifiedName": "Rule.RuleContext",
								"package": "@types/eslint"
							}
						},
						{
							"id": 170,
							"name": "functionIdentifier",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Identifier",
								"qualifiedName": "Identifier",
								"package": "@types/estree"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "FunctionExpression",
								"qualifiedName": "FunctionExpression",
								"package": "@types/estree"
							},
							{
								"type": "reference",
								"name": "FunctionDeclaration",
								"qualifiedName": "FunctionDeclaration",
								"package": "@types/estree"
							}
						]
					}
				}
			]
		},
		{
			"id": 171,
			"name": "resolveFunction",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 502,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L502"
				}
			],
			"signatures": [
				{
					"id": 172,
					"name": "resolveFunction",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 173,
							"name": "context",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "RuleContext",
								"qualifiedName": "Rule.RuleContext",
								"package": "@types/eslint"
							}
						},
						{
							"id": 174,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@types/estree"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "estree.Function",
								"qualifiedName": "Function",
								"package": "@types/estree"
							},
							{
								"type": "literal",
								"value": null
							}
						]
					}
				}
			]
		},
		{
			"id": 148,
			"name": "resolveIdentifiers",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/ast.ts",
					"line": 369,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/ast.ts#L369"
				}
			],
			"signatures": [
				{
					"id": 149,
					"name": "resolveIdentifiers",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 150,
							"name": "node",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Node",
								"qualifiedName": "Node",
								"package": "@typescript-eslint/types"
							}
						},
						{
							"id": 151,
							"name": "acceptShorthand",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "TSESTree.Identifier",
							"qualifiedName": "Identifier",
							"package": "@typescript-eslint/types"
						}
					}
				}
			]
		},
		{
			"id": 322,
			"name": "toEncodedMessage",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/linting/eslint/rules/helpers/location.ts",
					"line": 44,
					"character": 16,
					"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/location.ts#L44"
				}
			],
			"signatures": [
				{
					"id": 323,
					"name": "toEncodedMessage",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Encodes an ESLint descriptor message with secondary locations\n\nThe encoding consists in stringifying a JavaScript object with\n"
							},
							{
								"kind": "code",
								"text": "`JSON.stringify`"
							},
							{
								"kind": "text",
								"text": " that includes the ESLint's descriptor message\nalong with second location information: message and location.\n\nThis encoded message is eventually decoded by the linter wrapper\non the condition that the rule definition of the flagged problem\ndefines the internal "
							},
							{
								"kind": "code",
								"text": "`sonar-runtime`"
							},
							{
								"kind": "text",
								"text": " parameter in its schema."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "the encoded message with secondary locations"
									}
								]
							}
						]
					},
					"parameters": [
						{
							"id": 324,
							"name": "message",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the ESLint descriptor message"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 325,
							"name": "secondaryLocationsHolder",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the secondary locations"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 328,
									"name": "LocationHolder"
								}
							},
							"defaultValue": "[]"
						},
						{
							"id": 326,
							"name": "secondaryMessages",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the messages for each secondary location"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "undefined"
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									]
								}
							}
						},
						{
							"id": 327,
							"name": "cost",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the optional cost to fix"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"children": [
				230,
				253,
				366
			]
		},
		{
			"title": "Classes",
			"children": [
				350,
				426
			]
		},
		{
			"title": "Interfaces",
			"children": [
				334
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				224,
				328,
				223,
				222,
				504,
				500,
				225,
				425
			]
		},
		{
			"title": "Variables",
			"children": [
				228,
				250,
				229,
				290,
				447,
				252,
				424,
				251
			]
		},
		{
			"title": "Functions",
			"children": [
				18,
				175,
				8,
				1,
				237,
				144,
				389,
				380,
				133,
				386,
				25,
				152,
				22,
				162,
				156,
				383,
				496,
				492,
				488,
				484,
				116,
				112,
				119,
				124,
				420,
				140,
				136,
				481,
				448,
				49,
				460,
				41,
				186,
				73,
				82,
				197,
				104,
				98,
				469,
				67,
				62,
				89,
				28,
				92,
				284,
				36,
				32,
				70,
				56,
				86,
				78,
				95,
				456,
				191,
				463,
				202,
				215,
				108,
				194,
				52,
				501,
				209,
				452,
				183,
				466,
				287,
				477,
				212,
				46,
				101,
				473,
				218,
				246,
				15,
				331,
				411,
				399,
				395,
				405,
				414,
				167,
				171,
				148,
				322
			]
		}
	],
	"sources": [
		{
			"fileName": "src/linting/eslint/rules/helpers/index.ts",
			"line": 21,
			"character": 0,
			"url": "https://github.com/SonarSource/SonarJS/blob/78e375f2f/eslint-bridge/src/linting/eslint/rules/helpers/index.ts#L21"
		}
	]
}