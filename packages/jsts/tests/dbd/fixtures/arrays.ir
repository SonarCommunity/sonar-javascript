arrays.subscription_read (x#1) {
bb0:
  #3 = call #array-read#(param x#1, 0#2)
  return #3
}
arrays.subscription_multiple_index (x#1) {
bb0:
  #2 = call #unknown-expression#()
  return #2
}
arrays.subscription_read_dict (x#1) {
bb0:
  #3 = call #array-read#(param x#1, key#2)
  return #3
}
arrays.list_literal () {
bb0:
  #1 = call #new-object#():list
  #3 = call #array-add-last#(#1, 1#2)
  #5 = call #array-add-last#(#1, 2#4)
  #7 = call #array-add-last#(#1, 3#6)
  return #1
}
arrays.list_literal_empty () {
bb0:
  #1 = call #new-object#():list
  return #1
}
arrays.list_literal_inception () {
bb0:
  #1 = call #new-object#():list
  #3 = call #array-add-last#(#1, 1#2)
  #5 = call #array-add-last#(#1, 2#4)
  #6 = call #new-object#():list
  #8 = call #array-add-last#(#6, 3#7)
  #10 = call #array-add-last#(#6, 4#9)
  #11 = call #array-add-last#(#1, #6)
  return #1
}
arrays.list_literal_unpacking () {
bb0:
  l1#1 = call #new-object#():list
  #3 = call #array-add-last#(l1#1, 1#2)
  #5 = call #array-add-last#(l1#1, 2#4)
  #7 = call #array-add-last#(l1#1, 3#6)
  #8 = call #new-object#():list
  #10 = call #array-add-last#(#8, 4#9)
  #12 = call #array-add-last#(#8, 5#11)
  #13 = call #unaryop *#(l1#1)
  #15 = call #array-add-all#(#8, #13, 0#14)
  return #8
}
arrays.list_literal_unpacking_assignment () {
bb0:
  l1#1 = call #new-object#():list
  #3 = call #array-add-last#(l1#1, 1#2)
  #5 = call #array-add-last#(l1#1, 2#4)
  #7 = call #array-add-last#(l1#1, 3#6)
  x#9 = call #python-unpack#(l1#1, 0#8, 3#6)
  y#10 = call #python-unpack#(l1#1, 1#2, 3#6)
  z#11 = call #python-unpack#(l1#1, 2#4, 3#6)
  return null#0
}
arrays.list_literal_args (x#1, y#2) {
bb0:
  l#3 = call #new-object#():list
  l#4 = call #new-object#():list
  #5 = call #array-add-last#(l#4, param x#1)
  l#6 = call #new-object#():list
  #7 = call #array-add-last#(l#6, param x#1)
  #8 = call #array-add-last#(l#6, param y#2)
  return null#0
}
