// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file stats.proto (package sonarsource.ir, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf';
import { Message, proto3 } from '@bufbuild/protobuf';

/**
 * @generated from enum sonarsource.ir.UnknownCallReason
 */
export enum UnknownCallReason {
  /**
   * @generated from enum value: UNKNOWN_SYMBOL = 0;
   */
  UNKNOWN_SYMBOL = 0,

  /**
   * @generated from enum value: CALL_WITH_UNPACKING_OR_KEYWORD_ARGS = 1;
   */
  CALL_WITH_UNPACKING_OR_KEYWORD_ARGS = 1,

  /**
   * @generated from enum value: VARIADIC_PARAMS = 2;
   */
  VARIADIC_PARAMS = 2,

  /**
   * @generated from enum value: VIRTUAL_CALL = 3;
   */
  VIRTUAL_CALL = 3,

  /**
   * @generated from enum value: MISSING_ARGUMENT = 4;
   */
  MISSING_ARGUMENT = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(UnknownCallReason)
proto3.util.setEnumType(UnknownCallReason, 'sonarsource.ir.UnknownCallReason', [
  { no: 0, name: 'UNKNOWN_SYMBOL' },
  { no: 1, name: 'CALL_WITH_UNPACKING_OR_KEYWORD_ARGS' },
  { no: 2, name: 'VARIADIC_PARAMS' },
  { no: 3, name: 'VIRTUAL_CALL' },
  { no: 4, name: 'MISSING_ARGUMENT' },
]);

/**
 * @generated from message sonarsource.ir.IrGenerationStats
 */
export class IrGenerationStats extends Message<IrGenerationStats> {
  /**
   * @generated from oneof sonarsource.ir.IrGenerationStats.stats
   */
  stats:
    | {
        /**
         * @generated from field: sonarsource.ir.UnknownCall unknown_call = 1;
         */
        value: UnknownCall;
        case: 'unknownCall';
      }
    | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<IrGenerationStats>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'sonarsource.ir.IrGenerationStats';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'unknown_call', kind: 'message', T: UnknownCall, oneof: 'stats' },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IrGenerationStats {
    return new IrGenerationStats().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IrGenerationStats {
    return new IrGenerationStats().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IrGenerationStats {
    return new IrGenerationStats().fromJsonString(jsonString, options);
  }

  static equals(
    a: IrGenerationStats | PlainMessage<IrGenerationStats> | undefined,
    b: IrGenerationStats | PlainMessage<IrGenerationStats> | undefined,
  ): boolean {
    return proto3.util.equals(IrGenerationStats, a, b);
  }
}

/**
 * @generated from message sonarsource.ir.UnknownCall
 */
export class UnknownCall extends Message<UnknownCall> {
  /**
   * @generated from field: sonarsource.ir.UnknownCallReason reason = 1;
   */
  reason = UnknownCallReason.UNKNOWN_SYMBOL;

  constructor(data?: PartialMessage<UnknownCall>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'sonarsource.ir.UnknownCall';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'reason', kind: 'enum', T: proto3.getEnumType(UnknownCallReason) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnknownCall {
    return new UnknownCall().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnknownCall {
    return new UnknownCall().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnknownCall {
    return new UnknownCall().fromJsonString(jsonString, options);
  }

  static equals(
    a: UnknownCall | PlainMessage<UnknownCall> | undefined,
    b: UnknownCall | PlainMessage<UnknownCall> | undefined,
  ): boolean {
    return proto3.util.equals(UnknownCall, a, b);
  }
}
